package com.learnJava.Collections.TreeSet;

import java.util.Set;
import java.util.TreeSet;

public class Solution1 {
    public static void main(String[] args) {
        Set<String> set = new TreeSet<>();
        set.add("red");
        set.add("white");
        set.add("blue");

        System.out.println("treeSet is :" + set);

    }
}

===============================================================

package com.learnJava.Collections.TreeSet;

import java.util.Set;
import java.util.TreeSet;

public class Solution2 {
    public static void main(String[] args) {
        Set<String> set = new TreeSet<>();
        set.add("red");
        set.add("white");
        set.add("blue");

        for(String element: set){
            System.out.println(element);
        }
    }
}

===================================================================

package com.learnJava.Collections.TreeSet;

import java.util.Set;
import java.util.TreeSet;

public class Solution3 {
    public static void main(String[] args) {
        Set<String> set = new TreeSet<>();
        set.add("red");
        set.add("white");
        set.add("blue");

        System.out.println("treeSet1 : " + set);

        Set<String> set2 = new TreeSet<>();
        set2.add("Green");
        set2.add("Black");
        set2.add("Ace");

        System.out.println("treeSet2 : " + set2);

        set.addAll(set2);
        System.out.println("union treeSet : " + set);


    }
}
=========================================================================================================================
package com.learnJava.Collections.TreeSet;

import java.util.Iterator;
import java.util.Set;
import java.util.TreeSet;

public class Solution4 {

    public static void main(String[] args) {
        TreeSet<Integer> tSetOddNumbers = new TreeSet<Integer>();

        tSetOddNumbers.add(7);
        tSetOddNumbers.add(3);
        tSetOddNumbers.add(9);
        tSetOddNumbers.add(5);
        tSetOddNumbers.add(1);

        System.out.println("TreeSet contains: " + tSetOddNumbers);

        Set<Integer> reverseSet = tSetOddNumbers.descendingSet();

        Iterator<Integer> itr = reverseSet.iterator();

        System.out.println("Reverse set contains: ");
        while(itr.hasNext()){
            System.out.println( itr.next() );
        }
    }
}

==============================================================================================================================

package com.learnJava.Collections.TreeSet;

import java.util.TreeSet;

public class Solution5 {
    public static void main(String[] args) {
        TreeSet<String> set = new TreeSet<>();
        set.add("red");
        set.add("white");
        set.add("blue");
        System.out.println("the original set : " + set);

        Object first = set.first();
        System.out.println("the first element : " + first);

        Object last = set.last();
        System.out.println("the last element : " + last);

    }
}

=================================================================================================================================

package com.learnJava.Collections.TreeSet;

import java.util.TreeSet;

public class Solution6 {
    public static void main(String[] args) {
        TreeSet<String> treeSet = new TreeSet<>();
        treeSet.add("Red");
        treeSet.add("White");
        treeSet.add("Blue");

        System.out.println("the original tree set :" + treeSet);

        TreeSet<String> newTreeSet = (TreeSet<String>) treeSet.clone();
        System.out.println("clone tree set: " + newTreeSet);
    }
}

=======================================================================================================================================

package com.learnJava.Collections.TreeSet;

import java.util.TreeSet;

public class Solution7 {
    public static void main(String[] args) {
        TreeSet<String> treeSet = new TreeSet<>();
        treeSet.add("Red");
        treeSet.add("White");
        treeSet.add("Blue");

        System.out.println("the original tree set :" + treeSet);
        System.out.println("the size of tree set : " + treeSet.size());
    }
}


===============================================================================================================================================


package com.learnJava.Collections.TreeSet;
import java.util.TreeSet;
public class Solution8 {
    public static void main(String[] args) {
        TreeSet<String> treeSet = new TreeSet<>();
        treeSet.add("red");
        treeSet.add("blue");
        treeSet.add("white");
        System.out.println("treeSet1 : " + treeSet);

        TreeSet<String> treeSet1 = new TreeSet<>();
        treeSet1.add("red");
        treeSet1.add("green");
        treeSet1.add("black");
        System.out.println("treeSet2 : " + treeSet1);

        for(String s : treeSet){
            System.out.println(treeSet1.contains(s) ? "Yes": "No");
        }
    }
}


=================================================================================================================================================

package com.learnJava.Collections.TreeSet;

import java.util.Iterator;
import java.util.TreeSet;

public class Solution9 {
    public static void main(String[] args) {
        TreeSet<Integer> treeSet = new TreeSet<>();
        treeSet.add(1);
        treeSet.add(2);
        treeSet.add(3);
        treeSet.add(4);
        treeSet.add(5);
        treeSet.add(6);
        treeSet.add(7);
        treeSet.add(8);
        treeSet.add(9);
        treeSet.add(15);

        TreeSet <Integer>treeheadset = new TreeSet<Integer>();

        treeheadset = (TreeSet)treeSet.headSet(7);

        Iterator iterator;
        iterator = treeheadset.iterator();

        System.out.println("Tree set data: ");
        while (iterator.hasNext()){
            System.out.println(iterator.next() + " ");
        }
    }

}

=============================================================================================================================================================


package com.learnJava.Collections.TreeSet;
import java.util.TreeSet;
public class Solution10 {
    public static void main(String[] args) {
        TreeSet<Integer> tree = new TreeSet<Integer>();
        tree.add(20);
        tree.add(22);
        tree.add(46);
        tree.add(25);
        tree.add(36);
        tree.add(60);
        tree.add(82);
        tree.add(89);
        tree.add(14);
        System.out.println("Greater than or equal to 86 : "+tree.ceiling(86));
        System.out.println("Greater than or equal to 50 : "+tree.ceiling(50));
    }
}


==============================================================================================================================================================
package com.learnJava.Collections.TreeSet;
import java.util.TreeSet;
public class Solution11 {
    public static void main(String[] args) {
        TreeSet<Integer> tree = new TreeSet<Integer>();
        tree.add(20);
        tree.add(22);
        tree.add(46);
        tree.add(25);
        tree.add(36);
        tree.add(60);
        tree.add(82);
        tree.add(89);
        tree.add(14);
        System.out.println("Greater than or equal to 86 : "+tree.floor(86));
        System.out.println("Greater than or equal to 50 : "+tree.floor(50));
    }
}
==============================================================================================================================================================
package com.learnJava.Collections.TreeSet;
import java.util.TreeSet;
public class Solution12 {
    public static void main(String[] args) {
        TreeSet<Integer> tree = new TreeSet<Integer>();
        tree.add(10);
        tree.add(5);
        tree.add(8);
        tree.add(1);
        tree.add(11);
        tree.add(3);
        System.out.println("get an element in a tree set which is strictly less than the given element.â€¯ \n" + tree.higher(10));
    }
}
================================================================================================================================================================
package com.learnJava.Collections.TreeSet;
import java.util.TreeSet;
public class Solution13 {
    public static void main(String[] args) {
        TreeSet<Integer> tree_num = new TreeSet<Integer>();
        tree_num.add(10);
        tree_num.add(22);
        tree_num.add(36);
        tree_num.add(25);
        tree_num.add(16);
        tree_num.add(70);
        tree_num.add(82);
        tree_num.add(89);
        tree_num.add(14);
        System.out.println("Original tree set: "+tree_num);
        System.out.println("Removes the first(lowest) element: "+tree_num.pollFirst());
        System.out.println("Tree set after removing first element: "+tree_num);
    }
}
=================================================================================================================================================================

package com.learnJava.Collections.TreeSet;
import java.util.TreeSet;
public class Solution14 {
    public static void main(String[] args) {
            TreeSet<Integer> tree_num = new TreeSet<Integer>();
            tree_num.add(10);
            tree_num.add(22);
            tree_num.add(36);
            tree_num.add(25);
            tree_num.add(16);
            tree_num.add(70);
            tree_num.add(82);
            tree_num.add(89);
            tree_num.add(14);
            System.out.println("Original tree set: "+tree_num);
            System.out.println("Removes the last element: "+tree_num.pollLast());
            System.out.println("Tree set after removing last element: "+tree_num);
        }
}
================================================================================================================================================================

package com.learnJava.Collections.TreeSet;
import java.util.Set;
import java.util.TreeSet;
public class Solution15 {
    public static void main(String[] args) {
        Set<String> set = new TreeSet<>();
        set.add("red");
        set.add("white");
        set.add("blue");
        System.out.println("the original set: " + set);
        System.out.println("remove white" + set.remove("white"));
        System.out.println("the removed set : " + set);
    }
}    
